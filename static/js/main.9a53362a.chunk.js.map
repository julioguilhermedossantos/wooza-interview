{"version":3,"sources":["modules/User/UserCardProfile/userCardProfile.module.css","modules/User/redux/types.js","modules/User/redux/action.js","modules/User/SkillWidget/SkillWidget.js","modules/User/UserCardProfile/UserCardProfile.js","modules/User/view/User.js","App.js","serviceWorker.js","modules/User/redux/reducer.js","mainReducer.js","modules/User/redux/UserService.js","modules/User/redux/saga.js","mainSaga.js","store.js","index.js","modules/User/SkillWidget/skillWidget.module.css"],"names":["module","exports","GET_USERS","SET_USERS","setUsersAction","users","type","Types","payload","skillsList","id","icon","className","styles","skillIcon","color","iconBestSkill","size","SkillWidget","skill","best","find","el","this","getSkillIcon","skills","props","map","key","Row","style","display","Col","paddingLeft","length","generateSkillCols","getDefaultIcon","Component","UserCardProfile","Card","userCardProfileMargin","width","Img","variant","src","foto","Body","Title","nome","Text","cargo","Container","xs","sm","md","lg","User","renderUserItem","u","i","renderNoUsersFoundMsg","minWidth","minHeight","Alert","state","getUser","connect","dispatch","App","Boolean","window","location","hostname","match","initialState","MainReducer","combineReducers","action","UserService","getUsers","fetch","then","response","json","catch","error","console","log","getUsersSaga","watchGetUsersSaga","UsersSaga","service","call","put","takeEvery","all","MainSaga","sagaMiddleware","createSagaMiddleware","composedEnhancers","compose","applyMiddleware","store","createStore","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a53362a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCardProfileMargin\":\"userCardProfile_userCardProfileMargin__t8U5T\",\"noPaddingLeft\":\"userCardProfile_noPaddingLeft__mL0GO\"};","const MODULE_NAME = \"User\";\n\nexport const GET_USERS = `${MODULE_NAME}.GET_USERS`;\nexport const SET_USERS = `${MODULE_NAME}.SET_USERS`;\n","import * as Types from \"./types\";\n\nexport const getUsersAction = () => {\n  return {\n    type: Types.GET_USERS\n  };\n};\nexport const setUsersAction = users => {\n  return {\n    type: Types.SET_USERS,\n    payload: { users }\n  };\n};\n","import React, { Component } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport styles from \"./skillWidget.module.css\";\nimport {\n  FaReact,\n  FaJs,\n  FaPhp,\n  FaVuejs,\n  FaAngular,\n  FaJava,\n  FaNodeJs\n} from \"react-icons/fa\";\nimport { GiPistolGun, GiTrenchKnife, GiWinchesterRifle } from \"react-icons/gi\";\nconst skillsList = [\n  {\n    id: \"JS\",\n    icon: <FaJs className={styles.skillIcon} color=\"#7f8c8d\" />,\n    iconBestSkill: (\n      <FaJs className={styles.skillIcon} size={42} color=\"#e67e22\" />\n    )\n  },\n  {\n    id: \"React\",\n    icon: <FaReact className={styles.skillIcon} color=\"#7f8c8d\" />,\n    iconBestSkill: (\n      <FaReact className={styles.skillIcon} size={42} color=\"#e67e22\" />\n    )\n  },\n  {\n    id: \"NodeJS\",\n    icon: <FaNodeJs className={styles.skillIcon} color=\"#7f8c8d\" />,\n    iconBestSkill: (\n      <FaNodeJs className={styles.skillIcon} size={42} color=\"#e67e22\" />\n    )\n  },\n  {\n    id: \"Java\",\n    icon: <FaJava className={styles.skillIcon} color=\"#7f8c8d\" />,\n    iconBestSkill: (\n      <FaJava className={styles.skillIcon} size={42} color=\"#e67e22\" />\n    )\n  },\n  {\n    id: \"PHP\",\n    icon: <FaPhp className={styles.skillIcon} color=\"#7f8c8d\" />,\n    iconBestSkill: (\n      <FaPhp className={styles.skillIcon} size={42} color=\"#e67e22\" />\n    )\n  },\n  {\n    id: \"Angular\",\n    icon: <FaAngular className={styles.skillIcon} color=\"#7f8c8d\" />,\n    iconBestSkill: (\n      <FaAngular className={styles.skillIcon} size={42} color=\"#e67e22\" />\n    )\n  },\n  {\n    id: \"VueJS\",\n    icon: <FaVuejs className={styles.skillIcon} color=\"#7f8c8d\" />,\n    iconBestSkill: (\n      <FaVuejs className={styles.skillIcon} size={42} color=\"#e67e22\" />\n    )\n  },\n  {\n    id: \"Pistol\",\n    icon: <GiPistolGun className={styles.skillIcon} color=\"#7f8c8d\" />,\n    iconBestSkill: (\n      <GiPistolGun className={styles.skillIcon} size={42} color=\"#e67e22\" />\n    )\n  },\n  {\n    id: \"Knife\",\n    icon: <GiTrenchKnife className={styles.skillIcon} color=\"#7f8c8d\" />,\n    iconBestSkill: (\n      <GiTrenchKnife className={styles.skillIcon} size={42} color=\"#e67e22\" />\n    )\n  },\n  {\n    id: \"Rifle\",\n    icon: <GiWinchesterRifle className={styles.skillIcon} color=\"#7f8c8d\" />,\n    iconBestSkill: (\n      <GiWinchesterRifle\n        className={styles.skillIcon}\n        size={42}\n        color=\"#7f8c8d\"\n      />\n    )\n  }\n];\nexport default class SkillWidget extends Component {\n  getSkillIcon(skill, best) {\n    let icon = skillsList.find(el => el.id === skill);\n    return best ? icon.iconBestSkill : icon.icon;\n  }\n\n  getDefaultIcon() {\n    return this.getSkillIcon(\"default\");\n  }\n\n  generateSkillCols() {\n    const { skills } = this.props;\n    return (\n      skills &&\n      skills.map((skill, key) => {\n        return key === 0\n          ? this.getSkillIcon(skill, true)\n          : this.getSkillIcon(skill);\n      })\n    );\n  }\n\n  render() {\n    const { skills } = this.props;\n    return (\n      <Row style={{ display: \"flex\" }}>\n        <Col style={{ paddingLeft: 0 }}>\n          {skills && skills.length\n            ? this.generateSkillCols()\n            : this.getDefaultIcon()}\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport SkillWidget from \"../SkillWidget/SkillWidget\";\nimport styles from \"./userCardProfile.module.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\n\nexport default class UserCardProfile extends Component {\n  render() {\n    return (\n      <Card className={styles.userCardProfileMargin} style={{ width: \"auto\" }}>\n        <Card.Img\n          variant=\"top\"\n          src={\n            this.props.foto\n              ? this.props.foto\n              : \"https://via.placeholder.com/150/92c952\"\n          }\n        />\n        <Card.Body className=\"userProfileMinHeight\">\n          <Card.Title>\n            {this.props.nome ? this.props.nome : \"-------\"}\n          </Card.Title>\n          <Card.Text>\n            {this.props.cargo ? this.props.cargo : \"-------\"}\n          </Card.Text>\n          <Container>\n            <Row>\n              <Col xs={12} sm={12} md={12} lg={12}>\n                <SkillWidget skills={this.props.skills}></SkillWidget>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Alert from \"react-bootstrap/Alert\";\n\nimport { getUsersAction } from \"../redux/action\";\n\nimport UserCardProfile from \"../UserCardProfile/UserCardProfile\";\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    // const service = new UserService();\n    // service\n    //   .getUsers(\"/assets/users.json\")\n    //   .then(data => this.setState({ users: data }));\n    this.props.getUser();\n  }\n\n  renderUserItem = () => {\n    const { users } = this.props;\n    return users.map((u, i) => (\n      <Col key={i} xs={12} sm={12} md={4} lg={4}>\n        <UserCardProfile\n          nome={u.nome}\n          cargo={u.cargo}\n          foto={u.foto}\n          skills={u.skills}\n        />\n      </Col>\n    ));\n  };\n\n  renderNoUsersFoundMsg = () => (\n    <Col\n      xs={12}\n      sm={12}\n      md={4}\n      lg={4}\n      style={{ minWidth: \"100%\", minHeight: \"100vh\" }}\n    >\n      <Alert variant=\"info\">Oops! Não encontrei ninguém =,[</Alert>\n    </Col>\n  );\n\n  render() {\n    const { users } = this.props;\n    return (\n      <Row>\n        {users && users.length\n          ? this.renderUserItem()\n          : this.renderNoUsersFoundMsg()}\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUser: () => dispatch(getUsersAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\n","import React from \"react\";\nimport \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport User from \"./modules/User/view/User\";\n\nfunction App() {\n  return (\n    <Container className=\"bgColor\">\n      <User></User>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Types from \"./types\";\n\nconst initialState = {\n  users: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case Types.SET_USERS: {\n      return {\n        ...state,\n        users: action.payload.users\n      };\n    }\n    case Types.GET_USERS: {\n      return {\n        ...state\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport users from \"../src/modules/User/redux/reducer\";\n\nconst MainReducer = combineReducers({\n  users\n});\n\nexport default MainReducer;\n","export default class UserService {\n  getUsers = () => {\n    const getUsersURL = \"assets/users.json\";\n    return fetch(getUsersURL)\n      .then(response => response.json())\n      .then(json => json)\n      .catch(error => {\n        console.log(\"erro: \", error);\n      });\n  };\n}\n","import { setUsersAction } from \"./action\";\nimport { all, put, call, takeEvery } from \"redux-saga/effects\";\nimport UserService from \"./UserService\";\nimport * as Types from \"./types.js\";\n\nfunction* getUsersSaga() {\n  const service = new UserService();\n  try {\n    const users = yield call(service.getUsers);\n    yield put(setUsersAction(users));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* watchGetUsersSaga() {\n  yield takeEvery(Types.GET_USERS, getUsersSaga);\n}\n\nexport function* UsersSaga() {\n  yield all([watchGetUsersSaga()]);\n}\n","import { all } from \"redux-saga/effects\";\nimport { UsersSaga } from \"./modules/User/redux/saga\";\n\nexport function* MainSaga() {\n  yield all([UsersSaga()]);\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport MainReducer from \"./mainReducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { MainSaga } from \"./mainSaga\";\n\nconst enhancers = [];\n\nif (process.env.NODE_ENV === \"development\") {\n  const devTools = window.__REDUX_DEVTOOLS_EXTENSION__;\n  if (typeof devTools === \"function\") {\n    enhancers.push(devTools());\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composedEnhancers = compose(\n  applyMiddleware(sagaMiddleware),\n  ...enhancers\n);\n\nconst store = createStore(MainReducer, composedEnhancers);\n\nsagaMiddleware.run(MainSaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skillIcon\":\"skillWidget_skillIcon__3VfGl\",\"userProfileMinHeight\":\"skillWidget_userProfileMinHeight__2ccAo\"};"],"sourceRoot":""}